name: Deploy to DigitalOcean

on:
  workflow_dispatch:

env: 
  CONTAINER_NAME: git-registry
  IMAGE_NAME: github-workflows

jobs:

  build:

    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build the Docker image
      run: docker build --build-arg APPS_DOMAIN=${{ secrets.HOST }} . -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/$(echo $IMAGE_NAME)
    - name: Docker push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/$(echo $IMAGE_NAME)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
      name: executing remote ssh commands using ssh key
    - uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          # docker login 
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          # docker stop container
          docker stop ${{ env.IMAGE_NAME }}
          # Remove old container
          docker rm ${{ env.IMAGE_NAME }}
          # Remove old image
          docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          # Run a new container from a new image
          docker run -d --restart always --name ${{ env.IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

      
